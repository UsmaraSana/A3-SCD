/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.assignment;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author hp
 */
public class deleteItem extends javax.swing.JFrame {

    private Library library;
    private LmsFrame lf;

    /**
     * Creates new form deleteItem
     *
     * @param lib
     * @param lf
     */
    public deleteItem(Library lib, LmsFrame lf) {
        initComponents();
        this.library = lib;
        this.lf = lf;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        titleDelete = new java.awt.Label();
        deleteItemSave = new javax.swing.JButton();
        titleFieldDelete = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Delete Item");
        setPreferredSize(new java.awt.Dimension(356, 148));

        titleDelete.setText("Title:");

        deleteItemSave.setBackground(new java.awt.Color(204, 204, 255));
        deleteItemSave.setText("Delete Item");
        deleteItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(titleDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(titleFieldDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(deleteItemSave, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleFieldDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(deleteItemSave)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItemSaveActionPerformed
        // TODO add your handling code here:
        String title = titleFieldDelete.getText();
        if (title.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter all the fields!", "Error", JOptionPane.INFORMATION_MESSAGE);
        } else {
            boolean found = false;
            List<Book> tempBooksList = new ArrayList<>();
            try (BufferedWriter bw = new BufferedWriter(new FileWriter("C:\\Users\\hp\\Desktop\\Data.txt"))) {
                for (Book b : library.booksList) {
                    if (titleFieldDelete.getText().equals(b.getTitle())) {
                        found = true;
                        library.booksList = (ArrayList<Book>) tempBooksList;
                    } else {
                        tempBooksList.add(b);
                    }
                }
                for (Book b : tempBooksList) {
                    String bookData = b.getTitle() + "," + b.getAuthor() + "," + b.getYear() + "," + b.getPopularityCount();
                    bw.write(bookData);
                    bw.newLine();
                }
            } catch (IOException e) {
                System.out.println("Error writing to file!" + e.getMessage());
            }

            if (!found) {
                JOptionPane.showMessageDialog(null, "No such book exists!", "Error", JOptionPane.INFORMATION_MESSAGE);
            } else {

                lf.updateTable();
                lf.setVisible(true);
                this.setVisible(false);
                this.dispose();
            }
        }
    }//GEN-LAST:event_deleteItemSaveActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteItemSave;
    private javax.swing.JPanel jPanel1;
    private java.awt.Label titleDelete;
    private javax.swing.JTextField titleFieldDelete;
    // End of variables declaration//GEN-END:variables
}
